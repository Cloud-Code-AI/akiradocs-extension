{"title": "How to Utilize Block and Post Types in TypeScript", "description": "This guide outlines how to utilize the Block and Post types in TypeScript, covering main use cases and practical examples.", "author": "Documentation Team", "ogImage": "/og-image.png", "publishDate": "2024-10-29", "modifiedDate": "2024-10-29", "keywords": ["TypeScript", "Block Types", "Post Types", "Documentation"], "blocks": [{"id": "1", "type": "heading", "content": "1. Main Use Cases", "metadata": {"level": 1}}, {"id": "2", "type": "paragraph", "content": "The primary use cases for the Block and Post types include creating structured content blocks and building cohesive posts."}, {"id": "3", "type": "list", "content": "Creating Content Blocks\nBuilding Posts\nCustomizing Block Metadata", "metadata": {"listType": "unordered"}}, {"id": "4", "type": "heading", "content": "2. Required Setup", "metadata": {"level": 1}}, {"id": "5", "type": "paragraph", "content": "To use the Block and Post types, ensure you have the following setup:"}, {"id": "6", "type": "code", "content": "// Importing the types\nimport{Block, Post}from './path-to-your-types-file';", "metadata": {"language": "typescript"}}, {"id": "7", "type": "heading", "content": "3. Step-by-Step Examples for Common Operations", "metadata": {"level": 1}}, {"id": "8", "type": "paragraph", "content": "Here are some examples of how to create blocks and posts."}, {"id": "9", "type": "code", "content": "const exampleBlock: Block ={\n  id: '1',\n  type: 'paragraph',\n  content: 'This is an example paragraph.',\n  metadata:{styles:{bold: true}}\n};", "metadata": {"language": "typescript"}}, {"id": "10", "type": "code", "content": "const examplePost: Post ={\n  id: 'post-1',\n  title: 'My First Post',\n  description: 'This is a description of my first post.',\n  author: 'Author Name',\n  publishDate: new Date().toISOString(),\n  blocks:[exampleBlock],\n};", "metadata": {"language": "typescript"}}, {"id": "11", "type": "heading", "content": "4. Error Handling", "metadata": {"level": 1}}, {"id": "12", "type": "paragraph", "content": "Ensure to handle errors gracefully when working with blocks and posts."}, {"id": "13", "type": "blockquote", "content": "Always validate your data before processing."}, {"id": "14", "type": "divider", "content": ""}, {"id": "15", "type": "callout", "content": "This guide provides a comprehensive overview of using Block and Post types in TypeScript.", "metadata": {"type": "info", "title": "Note"}}]}