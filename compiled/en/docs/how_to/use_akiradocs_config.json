{"title": "How to Use the AkiraDocs Configuration", "description": "This guide provides an overview of how to utilize the `getAkiradocsConfig` function to access configuration settings in your project.", "author": "Documentation Team", "ogImage": "/images/akiradocs-config.png", "publishDate": "2024-10-29", "modifiedDate": "2024-10-29", "keywords": ["AkiraDocs", "configuration", "getAkiradocsConfig", "guide"], "blocks": [{"id": "1", "type": "heading", "content": "1. Main Use Cases", "metadata": {"level": 1, "styles": {"italic": false, "underline": false}}}, {"id": "2", "type": "paragraph", "content": "The primary use case for the `getAkiradocsConfig` function is to retrieve the configuration settings defined in the `akiradocs.config.json` file. This function returns an object of type `AkiraDocsConfig`, which contains various configuration options that can be used throughout your application."}, {"id": "3", "type": "list", "content": "Accessing documentation settings for rendering.\nCustomizing the behavior of documentation generation based on configuration.\nIntegrating with other modules that require configuration data.", "metadata": {"listType": "unordered"}}, {"id": "4", "type": "heading", "content": "2. Required Setup", "metadata": {"level": 1, "styles": {"italic": false, "underline": false}}}, {"id": "5", "type": "paragraph", "content": "Before you can use the `getAkiradocsConfig` function, ensure you have the following setup:"}, {"id": "6", "type": "code", "content": "import config from '../../akiradocs.config.json'; // Path to your configuration file\nimport{AkiraDocsConfig}from '@/types/AkiraConfigType'; // Type definition for TypeScript", "metadata": {"language": "javascript", "showLineNumbers": true}}, {"id": "7", "type": "heading", "content": "3. Step-by-Step Examples for Common Operations", "metadata": {"level": 1, "styles": {"italic": false, "underline": false}}}, {"id": "8", "type": "heading", "content": "Example 1: Retrieving Configuration", "metadata": {"level": 2, "styles": {"italic": false, "underline": false}}}, {"id": "9", "type": "code", "content": "const config = getAkiradocsConfig();\nconsole.log(config);", "metadata": {"language": "javascript", "showLineNumbers": true}}, {"id": "10", "type": "heading", "content": "Example 2: Using Configuration in Documentation Generation", "metadata": {"level": 2, "styles": {"italic": false, "underline": false}}}, {"id": "11", "type": "code", "content": "function generateDocumentation(){\n    const config = getAkiradocsConfig();\n    const title = config.title;\n    const version = config.version;\n    console.log(`Generating documentation for ${title}version ${version}`);\n}", "metadata": {"language": "javascript", "showLineNumbers": true}}, {"id": "12", "type": "heading", "content": "4. Error Handling", "metadata": {"level": 1, "styles": {"italic": false, "underline": false}}}, {"id": "13", "type": "paragraph", "content": "When using the `getAkiradocsConfig` function, ensure to handle potential errors such as missing configuration files or invalid JSON formats."}]}