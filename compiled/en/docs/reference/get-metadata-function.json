{"title": "Get Metadata Function Documentation", "description": "This document outlines the getMetadata function, detailing its purpose, return type, and example usage.", "author": "Documentation Team", "ogImage": "/og-image.png", "publishDate": "2024-10-29", "modifiedDate": "2024-10-29", "keywords": ["getMetadata", "function", "documentation", "API"], "blocks": [{"id": "1", "type": "heading", "content": "Overview", "metadata": {"level": 1}}, {"id": "2", "type": "paragraph", "content": "The `getMetadata` function retrieves metadata values for the application, including the title and description."}, {"id": "3", "type": "heading", "content": "Function Signature", "metadata": {"level": 2}}, {"id": "4", "type": "code", "content": "export function getMetadata(): Metadata", "metadata": {}}, {"id": "5", "type": "heading", "content": "Parameters", "metadata": {"level": 2}}, {"id": "6", "type": "paragraph", "content": "This function does not take any parameters."}, {"id": "7", "type": "heading", "content": "Return Type", "metadata": {"level": 2}}, {"id": "8", "type": "paragraph", "content": "The function returns an object of type `Metadata`, which contains metadata for the documentation site."}, {"id": "9", "type": "heading", "content": "Example Usage", "metadata": {"level": 2}}, {"id": "10", "type": "code", "content": "const metadata = getMetadata();\nconsole.log(metadata.title); // Outputs: 'Akira Docs' or the configured title\nconsole.log(metadata.description); // Outputs: 'Next-Gen Documentation' or the configured description", "metadata": {}}, {"id": "11", "type": "heading", "content": "Default Values", "metadata": {"level": 2}}, {"id": "12", "type": "paragraph", "content": "If the configuration does not specify a title or description, it defaults to 'Akira Docs' and 'Next-Gen Documentation', respectively."}, {"id": "13", "type": "heading", "content": "Error Handling", "metadata": {"level": 2}}, {"id": "14", "type": "paragraph", "content": "The current implementation does not explicitly handle exceptions. However, if `getAkiradocsConfig` fails or returns an invalid configuration, it may lead to runtime errors."}, {"id": "15", "type": "heading", "content": "Conclusion", "metadata": {"level": 2}}, {"id": "16", "type": "paragraph", "content": "The `getMetadata` function is essential for retrieving site metadata, ensuring that the documentation site has the correct title and description for SEO and user experience."}]}